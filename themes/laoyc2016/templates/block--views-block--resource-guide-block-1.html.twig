{#
/**
 * @file
 * Default theme implementation to display a block.
 *
 * Available variables:
 * - $block->subject: Block title.
 * - $content: Block content.
 * - $block->module: Module that generated the block.
 * - $block->delta: An ID for the block, unique within each module.
 * - $block->region: The block region embedding the current block.
 * - $classes: String of classes that can be used to style contextually through
 *   CSS. It can be manipulated through the variable $classes_array from
 *   preprocess functions. The default values can be one or more of the
 *   following:
 *   - block: The current template type, i.e., "theming hook".
 *   - block-[module]: The module generating the block. For example, the user
 *     module is responsible for handling the default user navigation block. In
 *     that case the class would be 'block-user'.
 * - $title_prefix (array): An array containing additional output populated by
 *   modules, intended to be displayed in front of the main title tag that
 *   appears in the template.
 * - $title_suffix (array): An array containing additional output populated by
 *   modules, intended to be displayed after the main title tag that appears in
 *   the template.
 *
 * Helper variables:
 * - $classes_array: Array of html class attribute values. It is flattened
 *   into a string within the variable $classes.
 * - $block_zebra: Outputs 'odd' and 'even' dependent on each block region.
 * - $zebra: Same output as $block_zebra but independent of any block region.
 * - $block_id: Counter dependent on each block region.
 * - $id: Same output as $block_id but independent of any block region.
 * - $is_front: Flags true when presented in the front page.
 * - $logged_in: Flags true when the current user is a logged-in member.
 * - $is_admin: Flags true when the current user is an administrator.
 * - $block_html_id: A valid HTML ID and guaranteed unique.
 *
 * @see bootstrap_preprocess_block()
 * @see template_preprocess()
 * @see template_preprocess_block()
 * @see bootstrap_process_block()
 * @see template_process()
 *
 * @ingroup templates
 */
#}
{{ attach_library('laoyc2016/angularjs-scripts') }}
{% block content %}
  <script>
    var resourceGuideJSON = "{{ json_encode_location_view(content) }}"; {# Pass JSON data to AngularJS controller #}
  </script>
{% endblock %}
<section{{ attributes.addClass('block', 'clearfix', 'resource-guide-list') }} ng-app="myApp" ng-controller="myCtrl">
  <div class="row">
    <div class="col-sm-12">
      {{ title_prefix }}
      {% if label %}
        <h2{{ title_attributes.addClass('block-title') }}>{{ label }}</h2>
      {% endif %}
      {{ title_suffix }}
    </div>
  </div>

  {% verbatim %}
  <div class="row">
    <div class="col-sm-12">
      <div ng-repeat="x in resourceGuideData" class="location">
        <div>
          <a href="{{ x.url }}">{{ x.title }}</a>
        </div>
        <div>{{ x.field_location_url }}</div>
        <div>{{ x.field_location_zip }}</div>
        <div ng-bind-html="x.field_location_address"></div>
        <div>{{ x.field_room_number }}</div>
        <div ng-bind-html="x.field_location_phone"></div>
        <div ng-bind-html="x.field_location_hours"></div>
        <div ng-bind-html="x.field_services"></div>
        <div ng-bind-html="x.field_services_contact"></div>
        <div ng-bind-html="x.field_eligibility"></div>
        <div ng-bind-html="x.field_how_best_to_access"></div>
        <div ng-repeat="cat in x.field_category" class="category">
          {{ cat.title }}
        </div>
        <div ng-repeat="sk in x.field_tags" class="search-keywords">
          {{ sk.title }}
        </div>
        <div ng-repeat="org in x.field_organization" class="organization">
          {{ org.title }}
        </div>
      </div>
    </div>
  </div>
  {% endverbatim %}

</section>

